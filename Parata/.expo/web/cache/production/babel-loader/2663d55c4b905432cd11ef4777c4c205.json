{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import BaseInput from\"./BaseInput\";var Sae=function(_BaseInput){_inherits(Sae,_BaseInput);function Sae(){_classCallCheck(this,Sae);return _possibleConstructorReturn(this,_getPrototypeOf(Sae).apply(this,arguments));}_createClass(Sae,[{key:\"render\",value:function render(){var _this$props=this.props,iconClass=_this$props.iconClass,iconColor=_this$props.iconColor,iconName=_this$props.iconName,label=_this$props.label,containerStyle=_this$props.style,inputHeight=_this$props.height,inputPadding=_this$props.inputPadding,labelHeight=_this$props.labelHeight,borderHeight=_this$props.borderHeight,inputStyle=_this$props.inputStyle,labelStyle=_this$props.labelStyle;var _this$state=this.state,width=_this$state.width,focusedAnim=_this$state.focusedAnim,value=_this$state.value;var AnimatedIcon=Animated.createAnimatedComponent(iconClass);return React.createElement(View,{style:[styles.container,containerStyle,{height:inputHeight+inputPadding}],onLayout:this._onLayout},React.createElement(TouchableWithoutFeedback,{onPress:this.focus},React.createElement(Animated.View,{style:{position:'absolute',bottom:focusedAnim.interpolate({inputRange:[0,1],outputRange:[0,labelHeight+inputPadding]})}},React.createElement(Animated.Text,{style:[styles.label,labelStyle,{fontSize:focusedAnim.interpolate({inputRange:[0,1],outputRange:[18,12]})}]},label))),React.createElement(TextInput,_extends({ref:this.input},this.props,{style:[styles.textInput,inputStyle,{width:width,height:inputHeight,paddingTop:inputPadding/2}],value:value,onBlur:this._onBlur,onChange:this._onChange,onFocus:this._onFocus,underlineColorAndroid:'transparent'})),React.createElement(TouchableWithoutFeedback,{onPress:this.focus},React.createElement(AnimatedIcon,{name:iconName,color:iconColor,style:{position:'absolute',bottom:0,right:focusedAnim.interpolate({inputRange:[0,1],outputRange:[0,width+inputPadding]}),transform:[{rotate:focusedAnim.interpolate({inputRange:[0,1],outputRange:['0deg','-90deg']})}],fontSize:20,backgroundColor:'transparent'}})),React.createElement(Animated.View,{style:{position:'absolute',bottom:0,right:0,height:borderHeight,width:focusedAnim.interpolate({inputRange:[0,1],outputRange:[0,width]}),backgroundColor:iconColor}}));}}]);return Sae;}(BaseInput);Sae.propTypes={height:PropTypes.number,borderHeight:PropTypes.number,iconClass:PropTypes.func.isRequired,iconName:PropTypes.string,iconColor:PropTypes.string,inputPadding:PropTypes.number,labelHeight:PropTypes.number};Sae.defaultProps={iconColor:'white',height:48,inputPadding:16,labelHeight:24,borderHeight:2,animationDuration:300,iconName:'pencil'};export{Sae as default};var styles=StyleSheet.create({container:{overflow:'hidden'},label:{backgroundColor:'transparent',fontWeight:'bold',color:'#7771ab'},textInput:{position:'absolute',bottom:0,left:0,paddingLeft:0,color:'white',fontSize:18}});","map":{"version":3,"sources":["/Users/alice/Desktop/parata-app/Parata/node_modules/react-native-textinput-effects/lib/Sae.js"],"names":["React","PropTypes","BaseInput","Sae","props","iconClass","iconColor","iconName","label","containerStyle","style","inputHeight","height","inputPadding","labelHeight","borderHeight","inputStyle","labelStyle","state","width","focusedAnim","value","AnimatedIcon","Animated","createAnimatedComponent","styles","container","_onLayout","focus","position","bottom","interpolate","inputRange","outputRange","fontSize","input","textInput","paddingTop","_onBlur","_onChange","_onFocus","right","transform","rotate","backgroundColor","propTypes","number","func","isRequired","string","defaultProps","animationDuration","StyleSheet","create","overflow","fontWeight","color","left","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Sae extends BaseInput {\n  static propTypes = {\n    height: PropTypes.number,\n    /*\n     * active border height\n     */\n    borderHeight: PropTypes.number,\n    /*\n     * This is the icon component you are importing from react-native-vector-icons.\n     * import FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\n     * iconClass={FontAwesomeIcon}\n     */\n    iconClass: PropTypes.func.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as name prop\n     */\n    iconName: PropTypes.string,\n    /*\n     * Passed to react-native-vector-icons library as color prop.\n     * This is also used as border color.\n     */\n    iconColor: PropTypes.string,\n    inputPadding: PropTypes.number,\n    labelHeight: PropTypes.number,\n  };\n\n  static defaultProps = {\n    iconColor: 'white',\n    height: 48,\n    inputPadding: 16,\n    labelHeight: 24,\n    borderHeight: 2,\n    animationDuration: 300,\n    iconName: 'pencil',\n  };\n\n  render() {\n    const {\n      iconClass,\n      iconColor,\n      iconName,\n      label,\n      style: containerStyle,\n      height: inputHeight,\n      inputPadding,\n      labelHeight,\n      borderHeight,\n      inputStyle,\n      labelStyle,\n    } = this.props;\n    const { width, focusedAnim, value } = this.state;\n    const AnimatedIcon = Animated.createAnimatedComponent(iconClass);\n\n    return (\n      <View\n        style={[\n          styles.container,\n          containerStyle,\n          {\n            height: inputHeight + inputPadding,\n          },\n        ]}\n        onLayout={this._onLayout}\n      >\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              position: 'absolute',\n              bottom: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, labelHeight + inputPadding],\n              }),\n            }}\n          >\n            <Animated.Text\n              style={[\n                styles.label,\n                labelStyle,\n                {\n                  fontSize: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [18, 12],\n                  }),\n                },\n              ]}\n            >\n              {label}\n            </Animated.Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[\n            styles.textInput,\n            inputStyle,\n            {\n              width,\n              height: inputHeight,\n              paddingTop: inputPadding / 2,\n            },\n          ]}\n          value={value}\n          onBlur={this._onBlur}\n          onChange={this._onChange}\n          onFocus={this._onFocus}\n          underlineColorAndroid={'transparent'}\n        />\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <AnimatedIcon\n            name={iconName}\n            color={iconColor}\n            style={{\n              position: 'absolute',\n              bottom: 0,\n              right: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, width + inputPadding],\n              }),\n              transform: [\n                {\n                  rotate: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: ['0deg', '-90deg'],\n                  }),\n                },\n              ],\n              fontSize: 20,\n              backgroundColor: 'transparent',\n            }}\n          />\n        </TouchableWithoutFeedback>\n        {/* bottom border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            height: borderHeight,\n            width: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, width],\n            }),\n            backgroundColor: iconColor,\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  label: {\n    backgroundColor: 'transparent',\n    fontWeight: 'bold',\n    color: '#7771ab',\n  },\n  textInput: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    paddingLeft: 0,\n    color: 'white',\n    fontSize: 18,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}