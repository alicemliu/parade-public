{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import BaseInput from\"./BaseInput\";var Hideo=function(_BaseInput){_inherits(Hideo,_BaseInput);function Hideo(){_classCallCheck(this,Hideo);return _possibleConstructorReturn(this,_getPrototypeOf(Hideo).apply(this,arguments));}_createClass(Hideo,[{key:\"render\",value:function render(){var _this$props=this.props,iconClass=_this$props.iconClass,iconColor=_this$props.iconColor,iconSize=_this$props.iconSize,iconName=_this$props.iconName,iconBackgroundColor=_this$props.iconBackgroundColor,containerStyle=_this$props.style,inputStyle=_this$props.inputStyle,inputHeight=_this$props.height;var _this$state=this.state,focusedAnim=_this$state.focusedAnim,value=_this$state.value;var AnimatedIcon=Animated.createAnimatedComponent(iconClass);return React.createElement(View,{style:[styles.container,containerStyle],onLayout:this._onLayout},React.createElement(TouchableWithoutFeedback,{onPress:this.focus},React.createElement(Animated.View,{style:{backgroundColor:iconBackgroundColor,justifyContent:'center',alignItems:'center',height:inputHeight,width:focusedAnim.interpolate({inputRange:[0,1],outputRange:[60,40]})}},React.createElement(AnimatedIcon,{name:iconName,color:iconColor,style:{fontSize:focusedAnim.interpolate({inputRange:[0,1],outputRange:[iconSize,iconSize*0.6]})}}))),React.createElement(TextInput,_extends({ref:this.input},this.props,{style:[styles.textInput,inputStyle],value:value,onBlur:this._onBlur,onChange:this._onChange,onFocus:this._onFocus,underlineColorAndroid:'transparent'})));}}]);return Hideo;}(BaseInput);Hideo.propTypes={iconBackgroundColor:PropTypes.string,iconClass:PropTypes.func.isRequired,iconName:PropTypes.string.isRequired,iconColor:PropTypes.string,iconSize:PropTypes.number};Hideo.defaultProps={iconColor:'white',iconSize:25,iconBackgroundColor:'#899dda',height:48,animationDuration:200};export{Hideo as default};var styles=StyleSheet.create({container:{flex:1,flexDirection:'row'},textInput:{flex:1,paddingHorizontal:16,paddingVertical:0,color:'black',backgroundColor:'white',fontSize:18}});","map":{"version":3,"sources":["/Users/alice/Desktop/parata-app/Parata/node_modules/react-native-textinput-effects/lib/Hideo.js"],"names":["React","PropTypes","BaseInput","Hideo","props","iconClass","iconColor","iconSize","iconName","iconBackgroundColor","containerStyle","style","inputStyle","inputHeight","height","state","focusedAnim","value","AnimatedIcon","Animated","createAnimatedComponent","styles","container","_onLayout","focus","backgroundColor","justifyContent","alignItems","width","interpolate","inputRange","outputRange","fontSize","input","textInput","_onBlur","_onChange","_onFocus","propTypes","string","func","isRequired","number","defaultProps","animationDuration","StyleSheet","create","flex","flexDirection","paddingHorizontal","paddingVertical","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Hideo extends BaseInput {\n  static propTypes = {\n    /*\n     * this is applied as background color of icon\n     */\n    iconBackgroundColor: PropTypes.string,\n\n    /*\n     * This is the icon component you are importing from react-native-vector-icons.\n     * import FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\n     * iconClass={FontAwesomeIcon}\n     */\n    iconClass: PropTypes.func.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as name prop\n     */\n    iconName: PropTypes.string.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as color prop\n     */\n    iconColor: PropTypes.string,\n    /*\n     * Passed to react-native-vector-icons library as size prop.\n     */\n    iconSize: PropTypes.number,\n  };\n\n  static defaultProps = {\n    iconColor: 'white',\n    iconSize: 25,\n    iconBackgroundColor: '#899dda',\n    height: 48,\n    animationDuration: 200,\n  };\n\n  render() {\n    const {\n      iconClass,\n      iconColor,\n      iconSize,\n      iconName,\n      iconBackgroundColor,\n      style: containerStyle,\n      inputStyle,\n      height: inputHeight,\n    } = this.props;\n    const {\n      focusedAnim,\n      value,\n    } = this.state;\n    const AnimatedIcon = Animated.createAnimatedComponent(iconClass);\n\n    return (\n      <View\n        style={[styles.container, containerStyle]}\n        onLayout={this._onLayout}\n      >\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              backgroundColor: iconBackgroundColor,\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: inputHeight,\n              width: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [60, 40],\n              }),\n            }}\n          >\n            <AnimatedIcon\n              name={iconName}\n              color={iconColor}\n              style={{\n                fontSize: focusedAnim.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [iconSize, iconSize * 0.6],\n                }),\n              }}\n            />\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[styles.textInput, inputStyle]}\n          value={value}\n          onBlur={this._onBlur}\n          onChange={this._onChange}\n          onFocus={this._onFocus}\n          underlineColorAndroid={'transparent'}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  textInput: {\n    flex: 1,\n    paddingHorizontal: 16,\n    paddingVertical: 0,\n    color: 'black',\n    backgroundColor: 'white',\n    fontSize: 18,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}