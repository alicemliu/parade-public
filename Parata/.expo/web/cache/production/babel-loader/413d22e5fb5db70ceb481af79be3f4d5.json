{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import BaseInput from\"./BaseInput\";var Akira=function(_BaseInput){_inherits(Akira,_BaseInput);function Akira(){_classCallCheck(this,Akira);return _possibleConstructorReturn(this,_getPrototypeOf(Akira).apply(this,arguments));}_createClass(Akira,[{key:\"render\",value:function render(){var _this$props=this.props,label=_this$props.label,containerStyle=_this$props.style,inputHeight=_this$props.height,labelHeight=_this$props.labelHeight,inputPadding=_this$props.inputPadding,inputStyle=_this$props.inputStyle,labelStyle=_this$props.labelStyle,borderColor=_this$props.borderColor;var _this$state=this.state,width=_this$state.width,focusedAnim=_this$state.focusedAnim,value=_this$state.value;return React.createElement(View,{style:containerStyle,onLayout:this._onLayout},React.createElement(TouchableWithoutFeedback,{onPress:this.focus},React.createElement(Animated.View,{style:{width:width,height:labelHeight,transform:[{translateY:focusedAnim.interpolate({inputRange:[0,1],outputRange:[labelHeight+inputPadding,0]})}]}},React.createElement(Text,{style:[styles.label,labelStyle]},label))),React.createElement(TextInput,_extends({ref:this.input},this.props,{style:[styles.textInput,inputStyle,{width:width,height:inputHeight,paddingHorizontal:inputPadding}],value:value,onBlur:this._onBlur,onChange:this._onChange,onFocus:this._onFocus,underlineColorAndroid:'transparent'})),React.createElement(Animated.View,{style:{position:'absolute',left:0,bottom:0,height:inputHeight,width:focusedAnim.interpolate({inputRange:[0,1],outputRange:[6,1]}),backgroundColor:borderColor}}),React.createElement(Animated.View,{style:{position:'absolute',top:labelHeight,width:width,height:focusedAnim.interpolate({inputRange:[0,1],outputRange:[6,1]}),backgroundColor:borderColor}}),React.createElement(Animated.View,{style:{position:'absolute',right:0,bottom:0,height:inputHeight,width:focusedAnim.interpolate({inputRange:[0,1],outputRange:[6,1]}),backgroundColor:borderColor}}),React.createElement(Animated.View,{style:{position:'absolute',bottom:0,height:focusedAnim.interpolate({inputRange:[0,1],outputRange:[6,1]}),width:width,backgroundColor:borderColor}}));}}]);return Akira;}(BaseInput);Akira.propTypes={borderColor:PropTypes.string,labelHeight:PropTypes.number,inputPadding:PropTypes.number,height:PropTypes.number};Akira.defaultProps={borderColor:'#7A7593',labelHeight:24,inputPadding:16,height:48,animationDuration:200};export{Akira as default};var styles=StyleSheet.create({label:{backgroundColor:'transparent',fontSize:14,fontWeight:'bold',color:'#cc6055',textAlign:'center'},textInput:{padding:0,color:'black',fontSize:18,textAlign:'center'}});","map":{"version":3,"sources":["/Users/alice/Desktop/parata-app/Parata/node_modules/react-native-textinput-effects/lib/Akira.js"],"names":["React","PropTypes","BaseInput","Akira","props","label","containerStyle","style","inputHeight","height","labelHeight","inputPadding","inputStyle","labelStyle","borderColor","state","width","focusedAnim","value","_onLayout","focus","transform","translateY","interpolate","inputRange","outputRange","styles","input","textInput","paddingHorizontal","_onBlur","_onChange","_onFocus","position","left","bottom","backgroundColor","top","right","propTypes","string","number","defaultProps","animationDuration","StyleSheet","create","fontSize","fontWeight","color","textAlign","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Akira extends BaseInput {\n  static propTypes = {\n    /*\n     * this is applied as active border and label color\n     */\n    borderColor: PropTypes.string,\n    labelHeight: PropTypes.number,\n    inputPadding: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    borderColor: '#7A7593',\n    labelHeight: 24,\n    inputPadding: 16,\n    height: 48,\n    animationDuration: 200,\n  };\n\n  render() {\n    const {\n      label,\n      style: containerStyle,\n      height: inputHeight,\n      labelHeight,\n      inputPadding,\n      inputStyle,\n      labelStyle,\n      borderColor,\n    } = this.props;\n    const {\n      width,\n      focusedAnim,\n      value,\n    } = this.state;\n\n    return (\n      <View style={containerStyle} onLayout={this._onLayout}>\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              width,\n              height: labelHeight,\n              transform: [\n                {\n                  translateY: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [labelHeight + inputPadding, 0],\n                  }),\n                },\n              ],\n            }}\n          >\n            <Text style={[styles.label, labelStyle]}>\n              {label}\n            </Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[\n            styles.textInput,\n            inputStyle,\n            {\n              width,\n              height: inputHeight,\n              paddingHorizontal: inputPadding,\n            },\n          ]}\n          value={value}\n          onBlur={this._onBlur}\n          onChange={this._onChange}\n          onFocus={this._onFocus}\n          underlineColorAndroid={'transparent'}\n        />\n        {/* left border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            height: inputHeight,\n            width: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [6, 1],\n            }),\n            backgroundColor: borderColor,\n          }}\n        />\n        {/* top border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            top: labelHeight,\n            width,\n            height: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [6, 1],\n            }),\n            backgroundColor: borderColor,\n          }}\n        />\n        {/* right border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            right: 0,\n            bottom: 0,\n            height: inputHeight,\n            width: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [6, 1],\n            }),\n            backgroundColor: borderColor,\n          }}\n        />\n        {/* bottom border */}\n        <Animated.View\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            height: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [6, 1],\n            }),\n            width,\n            backgroundColor: borderColor,\n          }}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    backgroundColor: 'transparent',\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#cc6055',\n    textAlign: 'center',\n  },\n  textInput: {\n    padding: 0,\n    color: 'black',\n    fontSize: 18,\n    textAlign: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}