{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import BaseInput from\"./BaseInput\";var Kaede=function(_BaseInput){_inherits(Kaede,_BaseInput);function Kaede(){_classCallCheck(this,Kaede);return _possibleConstructorReturn(this,_getPrototypeOf(Kaede).apply(this,arguments));}_createClass(Kaede,[{key:\"render\",value:function render(){var _this$props=this.props,label=_this$props.label,containerStyle=_this$props.style,inputStyle=_this$props.inputStyle,labelStyle=_this$props.labelStyle,inputHeight=_this$props.height,inputPadding=_this$props.inputPadding;var _this$state=this.state,width=_this$state.width,focusedAnim=_this$state.focusedAnim,value=_this$state.value;var inputWidth=width*0.6;var flatLabelStyle=StyleSheet.flatten(labelStyle);var labelBackgroundColor='#EBEAEA';if(flatLabelStyle&&flatLabelStyle.backgroundColor){labelBackgroundColor=flatLabelStyle.backgroundColor;}return React.createElement(View,{style:containerStyle,onLayout:this._onLayout},React.createElement(Animated.View,{style:{width:inputWidth,marginLeft:focusedAnim.interpolate({inputRange:[0,1],outputRange:[inputWidth*-1,0]})}},React.createElement(TextInput,_extends({ref:this.input},this.props,{style:[styles.textInput,inputStyle,{height:inputHeight,padding:inputPadding}],value:value,onBlur:this._onBlur,onFocus:this._onFocus,onChange:this._onChange,underlineColorAndroid:'transparent'}))),React.createElement(TouchableWithoutFeedback,{onPress:this.focus},React.createElement(Animated.View,{style:{position:'absolute',justifyContent:'center',top:0,height:inputHeight,width:width,left:focusedAnim.interpolate({inputRange:[0,1],outputRange:[0,inputWidth]}),backgroundColor:labelBackgroundColor}},React.createElement(Text,{style:[styles.label,labelStyle,{marginHorizontal:inputPadding}]},label))));}}]);return Kaede;}(BaseInput);Kaede.propTypes={easing:PropTypes.func,inputPadding:PropTypes.number,height:PropTypes.number};Kaede.defaultProps={easing:Easing.bezier(0.2,1,0.3,1),inputPadding:16,height:60};export{Kaede as default};var styles=StyleSheet.create({label:{fontSize:16,fontWeight:'bold',color:'#6a7989'},textInput:{backgroundColor:'white',color:'black',fontSize:16,fontWeight:'bold'}});","map":{"version":3,"sources":["/Users/alice/Desktop/parata-app/Parata/node_modules/react-native-textinput-effects/lib/Kaede.js"],"names":["React","PropTypes","BaseInput","Kaede","props","label","containerStyle","style","inputStyle","labelStyle","inputHeight","height","inputPadding","state","width","focusedAnim","value","inputWidth","flatLabelStyle","StyleSheet","flatten","labelBackgroundColor","backgroundColor","_onLayout","marginLeft","interpolate","inputRange","outputRange","input","styles","textInput","padding","_onBlur","_onFocus","_onChange","focus","position","justifyContent","top","left","marginHorizontal","propTypes","easing","func","number","defaultProps","Easing","bezier","create","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Easing,\n  Text,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Kaede extends BaseInput {\n  static propTypes = {\n    easing: PropTypes.func,\n    inputPadding: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    easing: Easing.bezier(0.2, 1, 0.3, 1),\n    inputPadding: 16,\n    height: 60,\n  };\n\n  render() {\n    const {\n      label,\n      style: containerStyle,\n      inputStyle,\n      labelStyle,\n      height: inputHeight,\n      inputPadding,\n    } = this.props;\n    const { width, focusedAnim, value } = this.state;\n    const inputWidth = width * 0.6;\n\n    const flatLabelStyle = StyleSheet.flatten(labelStyle);\n    let labelBackgroundColor = '#EBEAEA';\n    if (flatLabelStyle && flatLabelStyle.backgroundColor) {\n      labelBackgroundColor = flatLabelStyle.backgroundColor;\n    }\n\n    return (\n      <View style={containerStyle} onLayout={this._onLayout}>\n        <Animated.View\n          style={{\n            width: inputWidth,\n            marginLeft: focusedAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [inputWidth * -1, 0],\n            }),\n          }}\n        >\n          <TextInput\n            ref={this.input}\n            {...this.props}\n            style={[styles.textInput, inputStyle, {\n              height: inputHeight,\n              padding: inputPadding,\n            }]}\n            value={value}\n            onBlur={this._onBlur}\n            onFocus={this._onFocus}\n            onChange={this._onChange}\n            underlineColorAndroid={'transparent'}\n          />\n        </Animated.View>\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              position: 'absolute',\n              justifyContent: 'center',\n              top: 0,\n              height: inputHeight,\n              width,\n              left: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, inputWidth],\n              }),\n              backgroundColor: labelBackgroundColor,\n            }}\n          >\n            <Text style={[styles.label, labelStyle, {\n              marginHorizontal: inputPadding,\n            }]}>\n              {label}\n            </Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#6a7989',\n  },\n  textInput: {\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}