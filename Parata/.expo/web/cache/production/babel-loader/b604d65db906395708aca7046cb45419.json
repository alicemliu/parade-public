{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import BaseInput from\"./BaseInput\";var Isao=function(_BaseInput){_inherits(Isao,_BaseInput);function Isao(){_classCallCheck(this,Isao);return _possibleConstructorReturn(this,_getPrototypeOf(Isao).apply(this,arguments));}_createClass(Isao,[{key:\"render\",value:function render(){var _this$props=this.props,label=_this$props.label,containerStyle=_this$props.style,inputHeight=_this$props.height,borderHeight=_this$props.borderHeight,inputPadding=_this$props.inputPadding,labelHeight=_this$props.labelHeight,inputStyle=_this$props.inputStyle,labelStyle=_this$props.labelStyle,activeColor=_this$props.activeColor,passiveColor=_this$props.passiveColor;var _this$state=this.state,width=_this$state.width,focusedAnim=_this$state.focusedAnim,value=_this$state.value;return React.createElement(View,{style:[containerStyle,{height:inputHeight+labelHeight}],onLayout:this._onLayout},React.createElement(View,{style:[styles.inputContainer,{height:inputHeight,borderBottomColor:passiveColor}]},React.createElement(TextInput,_extends({ref:this.input},this.props,{style:[styles.textInput,inputStyle,{width:width,height:inputHeight,paddingHorizontal:inputPadding}],value:value,onBlur:this._onBlur,onChange:this._onChange,onFocus:this._onFocus,underlineColorAndroid:'transparent'}))),React.createElement(TouchableWithoutFeedback,{onPress:this.focus},React.createElement(View,{style:{height:labelHeight,width:width}},React.createElement(Animated.Text,{style:[styles.label,labelStyle,{width:width,opacity:focusedAnim.interpolate({inputRange:[0,1],outputRange:[1,0]}),bottom:focusedAnim.interpolate({inputRange:[0,1],outputRange:[0,labelHeight]}),color:passiveColor,height:labelHeight,left:inputPadding}]},label),React.createElement(Animated.Text,{style:[styles.label,labelStyle,{opacity:focusedAnim.interpolate({inputRange:[0,1],outputRange:[0,1]}),bottom:focusedAnim.interpolate({inputRange:[0,1],outputRange:[labelHeight*-1,0]}),color:activeColor,height:labelHeight,left:inputPadding}]},label))),React.createElement(Animated.View,{style:[styles.border,{height:focusedAnim.interpolate({inputRange:[0,1],outputRange:[0,borderHeight]}),width:width,backgroundColor:activeColor,bottom:labelHeight}]}));}}]);return Isao;}(BaseInput);Isao.propTypes={passiveColor:PropTypes.string,activeColor:PropTypes.string,borderHeight:PropTypes.number,labelHeight:PropTypes.number,inputPadding:PropTypes.number,height:PropTypes.number};Isao.defaultProps={activeColor:'red',passiveColor:'white',height:48,labelHeight:24,inputPadding:16,borderHeight:8,easing:Easing.bezier(0.2,1,0.3,1)};export{Isao as default};var styles=StyleSheet.create({inputContainer:{borderBottomWidth:2},label:{position:'absolute',paddingTop:4,backgroundColor:'transparent',fontSize:14,fontWeight:'bold'},textInput:{color:'#afb3b8',fontSize:18,fontWeight:'bold',padding:0},border:{position:'absolute',left:0,right:0}});","map":{"version":3,"sources":["/Users/alice/Desktop/parata-app/Parata/node_modules/react-native-textinput-effects/lib/Isao.js"],"names":["React","PropTypes","BaseInput","Isao","props","label","containerStyle","style","inputHeight","height","borderHeight","inputPadding","labelHeight","inputStyle","labelStyle","activeColor","passiveColor","state","width","focusedAnim","value","_onLayout","styles","inputContainer","borderBottomColor","input","textInput","paddingHorizontal","_onBlur","_onChange","_onFocus","focus","opacity","interpolate","inputRange","outputRange","bottom","color","left","border","backgroundColor","propTypes","string","number","defaultProps","easing","Easing","bezier","StyleSheet","create","borderBottomWidth","position","paddingTop","fontSize","fontWeight","padding","right"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  Easing,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Isao extends BaseInput {\n  static propTypes = {\n    /*\n     * this is applied as passive border and label color\n     */\n    passiveColor: PropTypes.string,\n    /*\n     * this is applied as active border and label color\n     */\n    activeColor: PropTypes.string,\n    /*\n     * active border height\n     */\n    borderHeight: PropTypes.number,\n    labelHeight: PropTypes.number,\n    inputPadding: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    activeColor: 'red',\n    passiveColor: 'white',\n    height: 48,\n    labelHeight: 24,\n    inputPadding: 16,\n    borderHeight: 8,\n    easing: Easing.bezier(0.2, 1, 0.3, 1),\n  };\n\n  render() {\n    const {\n      label,\n      style: containerStyle,\n      height: inputHeight,\n      borderHeight,\n      inputPadding,\n      labelHeight,\n      inputStyle,\n      labelStyle,\n      activeColor,\n      passiveColor,\n    } = this.props;\n    const {\n      width,\n      focusedAnim,\n      value,\n    } = this.state;\n\n    return (\n      <View\n        style={[\n          containerStyle,\n          {\n            height: inputHeight + labelHeight,\n          },\n        ]}\n        onLayout={this._onLayout}\n      >\n        <View\n          style={[\n            styles.inputContainer,\n            {\n              height: inputHeight,\n              borderBottomColor: passiveColor,\n            },\n          ]}\n        >\n          <TextInput\n            ref={this.input}\n            {...this.props}\n            style={[\n              styles.textInput,\n              inputStyle,\n              {\n                width,\n                height: inputHeight,\n                paddingHorizontal: inputPadding,\n              },\n            ]}\n            value={value}\n            onBlur={this._onBlur}\n            onChange={this._onChange}\n            onFocus={this._onFocus}\n            underlineColorAndroid={'transparent'}\n          />\n        </View>\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <View\n            style={{\n              height: labelHeight,\n              width,\n            }}\n          >\n            {/* passive label */}\n            <Animated.Text\n              style={[\n                styles.label,\n                labelStyle,\n                {\n                  width,\n                  opacity: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [1, 0],\n                  }),\n                  bottom: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, labelHeight],\n                  }),\n                  color: passiveColor,\n                  height: labelHeight,\n                  left: inputPadding,\n                },\n              ]}\n            >\n              {label}\n            </Animated.Text>\n            {/* active label */}\n            <Animated.Text\n              style={[\n                styles.label,\n                labelStyle,\n                {\n                  opacity: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0, 1],\n                  }),\n                  bottom: focusedAnim.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [labelHeight * -1, 0],\n                  }),\n                  color: activeColor,\n                  height: labelHeight,\n                  left: inputPadding,\n                },\n              ]}\n            >\n              {label}\n            </Animated.Text>\n          </View>\n        </TouchableWithoutFeedback>\n        <Animated.View\n          style={[\n            styles.border,\n            {\n              height: focusedAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: [0, borderHeight],\n              }),\n              width,\n              backgroundColor: activeColor,\n              bottom: labelHeight,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputContainer: {\n    borderBottomWidth: 2,\n  },\n  label: {\n    position: 'absolute',\n    paddingTop: 4,\n    backgroundColor: 'transparent',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  textInput: {\n    color: '#afb3b8',\n    fontSize: 18,\n    fontWeight: 'bold',\n    padding: 0,\n  },\n  border: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}