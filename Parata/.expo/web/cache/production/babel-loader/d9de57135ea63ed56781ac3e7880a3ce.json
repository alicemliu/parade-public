{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import BaseInput from\"./BaseInput\";var Fumi=function(_BaseInput){_inherits(Fumi,_BaseInput);function Fumi(){_classCallCheck(this,Fumi);return _possibleConstructorReturn(this,_getPrototypeOf(Fumi).apply(this,arguments));}_createClass(Fumi,[{key:\"render\",value:function render(){var _this$props=this.props,iconClass=_this$props.iconClass,iconColor=_this$props.iconColor,iconSize=_this$props.iconSize,passiveIconColor=_this$props.passiveIconColor,iconName=_this$props.iconName,label=_this$props.label,containerStyle=_this$props.style,inputStyle=_this$props.inputStyle,inputHeight=_this$props.height,inputPadding=_this$props.inputPadding,iconWidth=_this$props.iconWidth,labelStyle=_this$props.labelStyle;var _this$state=this.state,focusedAnim=_this$state.focusedAnim,value=_this$state.value;var AnimatedIcon=Animated.createAnimatedComponent(iconClass);var ANIM_PATH=inputPadding+inputHeight;var NEGATIVE_ANIM_PATH=ANIM_PATH*-1;return React.createElement(View,{style:[styles.container,containerStyle,{height:ANIM_PATH}],onLayout:this._onLayout},React.createElement(TouchableWithoutFeedback,{onPress:this.focus},React.createElement(AnimatedIcon,{name:iconName,color:iconColor,size:iconSize,style:{position:'absolute',left:inputPadding,bottom:focusedAnim.interpolate({inputRange:[0,0.5,0.51,0.7,1],outputRange:[24,ANIM_PATH,NEGATIVE_ANIM_PATH,NEGATIVE_ANIM_PATH,24]}),color:focusedAnim.interpolate({inputRange:[0,0.5,1],outputRange:[passiveIconColor,iconColor,iconColor]})}})),React.createElement(View,{style:[styles.separator,{height:inputHeight,left:iconWidth+8}]}),React.createElement(TouchableWithoutFeedback,{onPress:this.focus},React.createElement(Animated.View,{style:{position:'absolute',left:iconWidth+inputPadding,height:inputHeight,top:focusedAnim.interpolate({inputRange:[0,0.5,0.51,0.7,1],outputRange:[24,ANIM_PATH,NEGATIVE_ANIM_PATH,NEGATIVE_ANIM_PATH,inputPadding/2]})}},React.createElement(Animated.Text,{style:[styles.label,{fontSize:focusedAnim.interpolate({inputRange:[0,0.7,0.71,1],outputRange:[16,16,12,12]}),color:focusedAnim.interpolate({inputRange:[0,0.7],outputRange:['#696969','#a3a3a3']})},labelStyle]},label))),React.createElement(TextInput,_extends({ref:this.input},this.props,{style:[styles.textInput,{marginLeft:iconWidth+inputPadding,color:iconColor},inputStyle],value:value,onBlur:this._onBlur,onFocus:this._onFocus,onChange:this._onChange,underlineColorAndroid:'transparent'})));}}]);return Fumi;}(BaseInput);Fumi.propTypes={iconClass:PropTypes.func.isRequired,iconName:PropTypes.string.isRequired,iconColor:PropTypes.string,iconSize:PropTypes.number,passiveIconColor:PropTypes.string,height:PropTypes.number};Fumi.defaultProps={height:48,iconColor:'#00aeef',iconSize:20,iconWidth:40,inputPadding:16,passiveIconColor:'#a3a3a3',animationDuration:300};export{Fumi as default};var styles=StyleSheet.create({container:{overflow:'hidden',paddingTop:16,backgroundColor:'white'},label:{fontSize:18,fontWeight:'bold'},textInput:{flex:1,color:'black',fontSize:18,padding:7,paddingLeft:0},separator:{position:'absolute',width:1,backgroundColor:'#f0f0f0',top:8}});","map":{"version":3,"sources":["/Users/alice/Desktop/parata-app/Parata/node_modules/react-native-textinput-effects/lib/Fumi.js"],"names":["React","PropTypes","BaseInput","Fumi","props","iconClass","iconColor","iconSize","passiveIconColor","iconName","label","containerStyle","style","inputStyle","inputHeight","height","inputPadding","iconWidth","labelStyle","state","focusedAnim","value","AnimatedIcon","Animated","createAnimatedComponent","ANIM_PATH","NEGATIVE_ANIM_PATH","styles","container","_onLayout","focus","position","left","bottom","interpolate","inputRange","outputRange","color","separator","top","fontSize","input","textInput","marginLeft","_onBlur","_onFocus","_onChange","propTypes","func","isRequired","string","number","defaultProps","animationDuration","StyleSheet","create","overflow","paddingTop","backgroundColor","fontWeight","flex","padding","paddingLeft","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Animated,\n  TextInput,\n  TouchableWithoutFeedback,\n  View,\n  StyleSheet,\n} from 'react-native';\n\nimport BaseInput from './BaseInput';\n\nexport default class Fumi extends BaseInput {\n  static propTypes = {\n    /*\n     * This is the icon component you are importing from react-native-vector-icons.\n     * import FontAwesomeIcon from 'react-native-vector-icons/FontAwesome';\n     * iconClass={FontAwesomeIcon}\n     */\n    iconClass: PropTypes.func.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as name prop\n     */\n    iconName: PropTypes.string.isRequired,\n    /*\n     * Passed to react-native-vector-icons library as color prop.\n     * Also used as textInput color.\n     */\n    iconColor: PropTypes.string,\n    /*\n     * Passed to react-native-vector-icons library as size prop.\n     */\n    iconSize: PropTypes.number,\n\n    passiveIconColor: PropTypes.string,\n    height: PropTypes.number,\n  };\n\n  static defaultProps = {\n    height: 48,\n    iconColor: '#00aeef',\n    iconSize: 20,\n    iconWidth: 40,\n    inputPadding: 16,\n    passiveIconColor: '#a3a3a3',\n    animationDuration: 300,\n  };\n\n  render() {\n    const {\n      iconClass,\n      iconColor,\n      iconSize,\n      passiveIconColor,\n      iconName,\n      label,\n      style: containerStyle,\n      inputStyle,\n      height: inputHeight,\n      inputPadding,\n      iconWidth,\n      labelStyle,\n    } = this.props;\n    const { focusedAnim, value } = this.state;\n    const AnimatedIcon = Animated.createAnimatedComponent(iconClass);\n    const ANIM_PATH = inputPadding + inputHeight;\n    const NEGATIVE_ANIM_PATH = ANIM_PATH * -1;\n\n    return (\n      <View\n        style={[styles.container, containerStyle, {\n          height: ANIM_PATH,\n        }]}\n        onLayout={this._onLayout}\n      >\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <AnimatedIcon\n            name={iconName}\n            color={iconColor}\n            size={iconSize}\n            style={{\n              position: 'absolute',\n              left: inputPadding,\n              bottom: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 0.51, 0.7, 1],\n                outputRange: [\n                  24,\n                  ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  24,\n                ],\n              }),\n              color: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 1],\n                outputRange: [passiveIconColor, iconColor, iconColor],\n              }),\n            }}\n          />\n        </TouchableWithoutFeedback>\n        <View\n          style={[\n            styles.separator,\n            {\n              height: inputHeight,\n              left: iconWidth + 8,\n            },\n          ]}\n        />\n        <TouchableWithoutFeedback onPress={this.focus}>\n          <Animated.View\n            style={{\n              position: 'absolute',\n              left: iconWidth + inputPadding,\n              height: inputHeight,\n              top: focusedAnim.interpolate({\n                inputRange: [0, 0.5, 0.51, 0.7, 1],\n                outputRange: [\n                  24,\n                  ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  NEGATIVE_ANIM_PATH,\n                  inputPadding / 2,\n                ],\n              }),\n            }}\n          >\n            <Animated.Text\n              style={[\n                styles.label,\n                {\n                  fontSize: focusedAnim.interpolate({\n                    inputRange: [0, 0.7, 0.71, 1],\n                    outputRange: [16, 16, 12, 12],\n                  }),\n                  color: focusedAnim.interpolate({\n                    inputRange: [0, 0.7],\n                    outputRange: ['#696969', '#a3a3a3'],\n                  }),\n                },\n                labelStyle,\n              ]}\n            >\n              {label}\n            </Animated.Text>\n          </Animated.View>\n        </TouchableWithoutFeedback>\n        <TextInput\n          ref={this.input}\n          {...this.props}\n          style={[\n            styles.textInput,\n            {\n              marginLeft: iconWidth + inputPadding,\n              color: iconColor,\n            },\n            inputStyle,\n          ]}\n          value={value}\n          onBlur={this._onBlur}\n          onFocus={this._onFocus}\n          onChange={this._onChange}\n          underlineColorAndroid={'transparent'}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    paddingTop: 16,\n    backgroundColor: 'white',\n  },\n  label: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  textInput: {\n    flex: 1,\n    color: 'black',\n    fontSize: 18,\n    padding: 7,\n    paddingLeft: 0,\n  },\n  separator: {\n    position: 'absolute',\n    width: 1,\n    backgroundColor: '#f0f0f0',\n    top: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}